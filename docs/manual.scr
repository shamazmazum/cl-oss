@begin[ref=index](section)
   @title(Overview)
   @c(cl-oss) is a simple wrapper for OSS (Open Sound System). It provides
   access to dsp device for recording and playback through gray streams. It also
   works for FreeBSD's sound system, as the API is the same. You can get it from
   @link[uri="http://github.com/shamazmazum/cl-oss"](GitHub). The only currently
   supported Common Lisp realisation is SBCL, but it's trivial to add any other.
@end(section)

@begin(section)
   @title(Examples)
   To create an input or output stream for dsp device you must instaniate from
   either @c(oss:dsp-device-input) or @c(oss:dsp-device-output)
   class. Bidirectional streams are not supported. Each of these classes are
   inherited from @c(oss:dsp-device) class and supports following initargs
   @begin(list)
       @item(@c(:name) is the name of dsp device. Default is @c("/dev/dsp").)
       @item(@c(:sample-format) is the sample format supported by OSS.)
       @item(@c(:channels) is the number of channels. Default is 2.)
       @item(@c(:sample-rate) is the sample rate. Default is 44100.)
   @end(list)
   You can work then with instance of @c(oss:dsp-device-input) as with binary
   input stream and with instance of @c(oss:dsp-device-output) as with binary
   output stream. For example:
   @begin[lang=lisp](code)
   (let ((stream (make-instance 'oss:dsp-device-output
                                :sample-format oss:+afmt-s16-le+)))
       (write-sequence buffer stream)
       (close stream))
   @end(code)
   You can also use macro @c(oss:with-dsp-device) to open and safely close dsp
   devices.
   @begin[lang=lisp](code)
   (oss:with-dsp-device (stream oss:dsp-device-output :sample-format oss:+afmt-s16-le+)
       (write-sequence buffer stream))
   @end(code)
   If dsp device initialization fails (e.g. unsupported samplerate),
   @c(dsp-conf-error) condition is signaled.
   The sample formats supported by OSS include:
   @begin(list)
       @item(@c(+afmt-mu-law+))
       @item(@c(+afmt-a-law+))
       @item(@c(+afmt-ima-adpcm+))
       @item(@c(+afmt-u8+))
       @item(@c(+afmt-s16-le+))
       @item(@c(+afmt-s16-be+))
       @item(@c(+afmt-s16-ne+))
       @item(@c(+afmt-s8+))
       @item(@c(+afmt-s32-le+))
       @item(@c(+afmt-s32-be+))
       @item(@c(+afmt-u16-le+))
       @item(@c(+afmt-u16-be+))
       @item(@c(+afmt-mpeg+))
   @end(list)
@end(section)

@begin(section)
   @title(API)
   Here is an API reference.
   @cl:with-package[name="cl-oss"](
      @cl:doc(class dsp-device)
      @cl:doc(class dsp-device-output)
      @cl:doc(class dsp-device-input)
      @cl:doc(macro with-dsp-device)
   )
@end(section)
